buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
        // gradle versions
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    }
}

plugins {
    id 'com.github.kt3k.coveralls' version '2.8.1'
}

apply plugin: 'idea'
apply plugin: 'com.google.protobuf'

repositories{
    mavenCentral()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.2.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.4.0'
        }
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
    generateProtoTasks {
        all()*.plugins {
            grpc {
                outputSubDir = 'java'
            }
        }
    }
}

idea {
    module {
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java")
    }
}

dependencies {
    // DI
    compile 'com.google.inject:guice:4.1.0'

    // Utils
    compile 'com.google.guava:guava:22.0'
    compile 'commons-beanutils:commons-beanutils:1.9.3'


    // logging bridges
    compile 'org.slf4j:jul-to-slf4j:1.7.25'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.slf4j:jcl-over-slf4j:1.7.25'
    compile 'org.slf4j:log4j-over-slf4j:1.7.25'
    // required by elasticsearch for bridging log4j 2 to slf4j
    compile 'org.apache.logging.log4j:log4j-to-slf4j:2.8.2'
    compile 'ch.qos.logback:logback-core:1.2.3'
    compile 'ch.qos.logback:logback-classic:1.2.3'

    // config
    compile 'org.apache.commons:commons-configuration2:2.1.1'

    // gRPC
    compile 'io.grpc:grpc-netty:1.4.0'
    compile 'io.grpc:grpc-protobuf:1.4.0'
    compile 'io.grpc:grpc-stub:1.4.0'

    // elasticsearch
    compile 'org.elasticsearch.client:transport:5.2.1'

    // metrics and health
    compile 'org.nanohttpd:nanohttpd:2.3.1'
    compile 'io.prometheus:simpleclient:0.0.23'
    compile 'io.prometheus:simpleclient_common:0.0.23'

    // test dependencies
    testCompile 'junit:junit:4.12'
    testCompile 'com.github.javafaker:javafaker:0.13'
    testCompile 'org.mockito:mockito-core:2.8.47'
    testCompile 'org.assertj:assertj-core:3.8.0'
}

clean {
    // remove auto-generated files on clean
    delete "${projectDir}/src/generated"
}